#!/usr/bin/env node
const Program = require('commander')
const inquirer = require('inquirer')
const logger = require('../lib/logger.js')
const { isProjectName, isAppId } = require('../lib/validate')
const { init } = require('../scripts/init')

const Prompt = inquirer.createPromptModule()

const initPrompt = [
  // {
  //   type: 'input',
  //   name: 'projectName',
  //   message: 'Please enter a project name',
  //   validate(input) {
  //     if (!isProjectName(input)) {
  //       return 'Invalid project name'
  //     }
  //     return true
  //   },
  // },
  // {
  //   type: 'input',
  //   name: 'projectDescription',
  //   message: 'Please enter a project description',
  //   defualt: '',
  // },
  // {
  //   type: 'input',
  //   name: 'author',
  //   message: 'Please enter a name for author',
  //   defualt: '',
  // },
  // {
  //   type: 'input',
  //   name: 'appId',
  //   message: 'Please enter a wechat appId',
  //   validate(input) {
  //     if (!isAppId(input)) {
  //       return 'Invalid wechat appId'
  //     }
  //     return true
  //   },
  // },
  // {
  //   type: 'list',
  //   name: 'libVersion',
  //   message: 'Please choose base wechart libVersion',
  //   choices: ['2.15.0', '2.14.4', '2.14.3', '2.14.1', '2.14.0'],
  //   default: '2.14.0',
  // },
  // {
  //   type: 'list',
  //   name: 'componentLibrary',
  //   message: 'Please choose a component library',
  //   default: 'jpass',
  //   choices: ['jpass', 'vant-weapp'],
  // },
  // {
  //   type: 'list',
  //   name: 'cssPrecompiledType',
  //   message: 'Please choose a css precompiled type',
  //   default: 'Sass',
  //   choices: ['Sass', 'Less'],
  // },
  // {
  //   type: 'confirm',
  //   name: 'esLint',
  //   message: 'Use eslint to lint your code?',
  //   default: true,
  // },
  {
    type: 'confirm',
    name: 'isOk',
    message: 'Is this OK?',
    default: true,
  },
]

Program.action(() => {
  Prompt(initPrompt)
    .then(async (answer) => {
      if (answer.isOk) {
        await init(answer)
      } else {
        logger.error('you canceled the operation, please try again')
      }
    })
    .catch((error) => {
      logger.error('init error, please try again')
      console.log(error)
    })
})

Program.parse(process.argv)
